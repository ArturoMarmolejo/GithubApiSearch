import Head from "next/head";
import "bulma/css/bulma.min.css";
import type { GetServerSideProps, InferGetServerSidePropsType, NextPage } from "next";
import { useRouter } from "next/router";
import styles from "../styles/Home.module.css";
import { Hero } from "../layouts/Hero/Hero";
import Pagination from "../components/Pagination/Pagination";
import ListRepository from "../components/ListRepository/ListRepository";
import { useState } from "react";
import { findRepositories } from "../api/repositories";
import getTopic from "../utils/getTopic";
import { MAX_BUTTON_PAGINATION, PER_PAGE } from "../api/constants";
import { iRepository } from "../api/types/repository";

export const getServerSideProps: GetServerSideProps = async (): Promise<any> => {
  try {
    const response = await findRepositories({ q: getTopic(), page: 1, per_page: PER_PAGE })
    const total_page = response.total_count / 10;

    return {
      props: {
        repositories: response.items,
        total_page: total_page > 100 ? 100 : total_page,
      }
    };
  } catch (error) {
    return {
      props: {
        repositories: [],
        total_page: 0,
      }
    };
  }
};

type RepositoriesPageProps = InferGetServerSidePropsType<typeof getServerSideProps>


const Home: NextPage = ({ repositories: listRepositories, total_page }: RepositoriesPageProps) => {
  const [repositories, setRepositories] = useState<iRepository[]>(listRepositories);
  const [total, setTotal] = useState<number>(total_page);
  const [loading, setLoading] = useState<boolean>(false);
  const router = useRouter();

  const changePagination = async (page: number) => {
    try {
      setLoading(true)
      const response = await findRepositories({ q: getTopic(), page, per_page: PER_PAGE });

      setTotal(response.total_count);
      setRepositories(response.items);
    } catch (error) {
      /* show error */
      console.error(error);
    } finally {
      setLoading(false)
      window.scroll(0, 0);
    }
  }

  return (
    <div className="">
      <Head>
        <title>GitHub Search</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <Hero />
      <main className="posts-repositories wrapper">
      <ListRepository repositories={repositories} />
        <Pagination
          total={total}
          loading={loading}
          totalButtons={MAX_BUTTON_PAGINATION}
          onChange={changePagination}
        />
      </main>

      <footer className={styles.footer}></footer>
    </div>
  );
};

export default Home;